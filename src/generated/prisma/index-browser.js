
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.APPLICATIONScalarFieldEnum = {
  application_id: 'application_id',
  student_id: 'student_id',
  scholarship_id: 'scholarship_id',
  submission_date: 'submission_date',
  status: 'status',
  total_points: 'total_points',
  reviewer_comments: 'reviewer_comments',
  review_date: 'review_date'
};

exports.Prisma.COMMITTEE_REVIEWScalarFieldEnum = {
  review_id: 'review_id',
  application_id: 'application_id',
  reviewer_id: 'reviewer_id',
  review_date: 'review_date',
  points_awarded: 'points_awarded',
  comments: 'comments',
  status: 'status',
  is_read: 'is_read'
};

exports.Prisma.DOCUMENTScalarFieldEnum = {
  document_id: 'document_id',
  application_id: 'application_id',
  document_type: 'document_type',
  file_name: 'file_name',
  file_path: 'file_path',
  upload_date: 'upload_date',
  verification_status: 'verification_status'
};

exports.Prisma.ELIGIBILITY_CRITERIAScalarFieldEnum = {
  criteria_id: 'criteria_id',
  scholarship_id: 'scholarship_id',
  criteria_name: 'criteria_name',
  criteria_description: 'criteria_description',
  min_value: 'min_value',
  max_value: 'max_value',
  weight: 'weight'
};

exports.Prisma.FAMILY_MEMBERScalarFieldEnum = {
  member_id: 'member_id',
  student_id: 'student_id',
  full_name: 'full_name',
  age: 'age',
  relationship: 'relationship',
  designation: 'designation',
  annual_income: 'annual_income',
  workplace: 'workplace',
  phone_number: 'phone_number'
};

exports.Prisma.NOTIFICATIONScalarFieldEnum = {
  notification_id: 'notification_id',
  user_id: 'user_id',
  message: 'message',
  created_at: 'created_at',
  is_read: 'is_read'
};

exports.Prisma.OTHER_FUNDINGScalarFieldEnum = {
  funding_id: 'funding_id',
  student_id: 'student_id',
  funding_name: 'funding_name',
  organization: 'organization',
  annual_amount: 'annual_amount',
  start_date: 'start_date',
  end_date: 'end_date'
};

exports.Prisma.PAYMENTScalarFieldEnum = {
  payment_id: 'payment_id',
  application_id: 'application_id',
  amount: 'amount',
  payment_date: 'payment_date',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status'
};

exports.Prisma.SCHOLARSHIPScalarFieldEnum = {
  scholarship_id: 'scholarship_id',
  name: 'name',
  description: 'description',
  amount: 'amount',
  no_of_students: 'no_of_students',
  application_deadline: 'application_deadline',
  start_date: 'start_date',
  end_date: 'end_date',
  provider_id: 'provider_id',
  is_active: 'is_active'
};

exports.Prisma.SCHOLARSHIP_PROVIDERScalarFieldEnum = {
  provider_id: 'provider_id',
  name: 'name',
  contact_person: 'contact_person',
  phone: 'phone',
  email: 'email',
  address: 'address'
};

exports.Prisma.SIBLING_EDUCATIONScalarFieldEnum = {
  education_id: 'education_id',
  student_id: 'student_id',
  member_id: 'member_id',
  institution: 'institution',
  year_grade: 'year_grade',
  registration_course: 'registration_course'
};

exports.Prisma.STUDENTScalarFieldEnum = {
  student_id: 'student_id',
  user_id: 'user_id',
  full_name: 'full_name',
  registration_no: 'registration_no',
  date_of_birth: 'date_of_birth',
  permanent_address: 'permanent_address',
  admission_date: 'admission_date',
  year_of_study: 'year_of_study',
  gender: 'gender',
  phone_number: 'phone_number',
  email: 'email',
  school_name: 'school_name',
  unmarried_siblings: 'unmarried_siblings'
};

exports.Prisma.USERScalarFieldEnum = {
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  username: 'username',
  password: 'password',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.APPLICATIONOrderByRelevanceFieldEnum = {
  reviewer_comments: 'reviewer_comments'
};

exports.Prisma.COMMITTEE_REVIEWOrderByRelevanceFieldEnum = {
  comments: 'comments'
};

exports.Prisma.DOCUMENTOrderByRelevanceFieldEnum = {
  document_type: 'document_type',
  file_name: 'file_name',
  file_path: 'file_path'
};

exports.Prisma.ELIGIBILITY_CRITERIAOrderByRelevanceFieldEnum = {
  criteria_name: 'criteria_name',
  criteria_description: 'criteria_description'
};

exports.Prisma.FAMILY_MEMBEROrderByRelevanceFieldEnum = {
  full_name: 'full_name',
  relationship: 'relationship',
  designation: 'designation',
  workplace: 'workplace',
  phone_number: 'phone_number'
};

exports.Prisma.NOTIFICATIONOrderByRelevanceFieldEnum = {
  message: 'message'
};

exports.Prisma.OTHER_FUNDINGOrderByRelevanceFieldEnum = {
  funding_name: 'funding_name',
  organization: 'organization'
};

exports.Prisma.PAYMENTOrderByRelevanceFieldEnum = {
  payment_method: 'payment_method',
  transaction_id: 'transaction_id'
};

exports.Prisma.SCHOLARSHIPOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.SCHOLARSHIP_PROVIDEROrderByRelevanceFieldEnum = {
  name: 'name',
  contact_person: 'contact_person',
  phone: 'phone',
  email: 'email',
  address: 'address'
};

exports.Prisma.SIBLING_EDUCATIONOrderByRelevanceFieldEnum = {
  institution: 'institution',
  year_grade: 'year_grade',
  registration_course: 'registration_course'
};

exports.Prisma.STUDENTOrderByRelevanceFieldEnum = {
  full_name: 'full_name',
  registration_no: 'registration_no',
  permanent_address: 'permanent_address',
  phone_number: 'phone_number',
  email: 'email',
  school_name: 'school_name'
};

exports.Prisma.USEROrderByRelevanceFieldEnum = {
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  username: 'username',
  password: 'password'
};
exports.APPLICATION_status = exports.$Enums.APPLICATION_status = {
  pending: 'pending',
  reviewed: 'reviewed',
  approved: 'approved',
  rejected: 'rejected'
};

exports.COMMITTEE_REVIEW_status = exports.$Enums.COMMITTEE_REVIEW_status = {
  read: 'read',
  unread: 'unread'
};

exports.DOCUMENT_verification_status = exports.$Enums.DOCUMENT_verification_status = {
  pending: 'pending',
  verified: 'verified',
  rejected: 'rejected'
};

exports.PAYMENT_status = exports.$Enums.PAYMENT_status = {
  pending: 'pending',
  completed: 'completed',
  failed: 'failed'
};

exports.STUDENT_gender = exports.$Enums.STUDENT_gender = {
  male: 'male',
  female: 'female',
  other: 'other'
};

exports.USER_role = exports.$Enums.USER_role = {
  student: 'student',
  coordinator: 'coordinator',
  admin: 'admin'
};

exports.Prisma.ModelName = {
  APPLICATION: 'APPLICATION',
  COMMITTEE_REVIEW: 'COMMITTEE_REVIEW',
  DOCUMENT: 'DOCUMENT',
  ELIGIBILITY_CRITERIA: 'ELIGIBILITY_CRITERIA',
  FAMILY_MEMBER: 'FAMILY_MEMBER',
  NOTIFICATION: 'NOTIFICATION',
  OTHER_FUNDING: 'OTHER_FUNDING',
  PAYMENT: 'PAYMENT',
  SCHOLARSHIP: 'SCHOLARSHIP',
  SCHOLARSHIP_PROVIDER: 'SCHOLARSHIP_PROVIDER',
  SIBLING_EDUCATION: 'SIBLING_EDUCATION',
  STUDENT: 'STUDENT',
  USER: 'USER'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
